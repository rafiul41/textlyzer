version: '3.8'
services:
  mongo:
    image: mongo:7.0
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.4
    command:
      - start-dev
      - --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_DB_SCHEMA: public
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_PROXY: "passthrough"
    volumes:
      - ./keycloak-data:/opt/keycloak/data/import
    ports:
      - '8080:8080'
    depends_on:
      - postgres
    networks:
      - app-network

  redis:
    image: redis:7
    restart: always
    ports:
      - '6379:6379'
    networks:
      - app-network

  backend:
    build: ./backend
    restart: always
    ports:
      - '3001:3001'
    environment:
      - MONGO_URL=mongodb://mongo:27017/textlyzer
      - REDIS_URL=redis://redis:6379
      - KEYCLOAK_URL=http://keycloak:8080
    depends_on:
      - mongo
      - redis
      - keycloak
    networks:
      - app-network

  frontend:
    build: ./frontend
    restart: always
    ports:
      - '5173:80'
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  mongo_data:
  postgres_data:

networks:
  app-network:
    driver: bridge 